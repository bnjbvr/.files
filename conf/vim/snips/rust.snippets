#######################################################################
#                            Rust Snippets                            #
#######################################################################

priority -50

snippet debug "Debug implementation"
	impl fmt::Debug for $1 {
		fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {
			write!(fmt, $2)
		}
	}

snippet display
	impl fmt::Display for $1 {
		fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {
			write!(fmt, $2)
		}
	}

snippet fn "fn name(?) -> ? {}"
	fn ${1:function_name}($2)${3/..*/ -> /}$3 {
		${VISUAL}$0
	}

snippet pfn "pub fn name(?) -> ? {}"
	pub fn ${1:function_name}($2)${3/..*/ -> /}$3 {
		${VISUAL}$0
	}

snippet ctor "constructor"
	pub fn new($1) -> Self {
		Self {
		}
	}

snippet s "struct"
	struct $1 {
		$2
	}

snippet i "impl"
	impl $1${2/..*/ for /}$2 {
		$3
	}

snippet si "struct and impl"
	struct $1 {
		$2
	}

	impl $1 {
		fn new($2) -> Self {
			Self {
				$3
			}
		}
	}

snippet pln "println!(..)" b
	println!("$1"${2/..*/, /}$2);

snippet fmt "format!(..)"
	format!("$1"${2/..*/, /}$2);

# vim:ft=snippets:
