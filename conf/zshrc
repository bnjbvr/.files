# -----------------------------------------------------------------------------
# initialization
# -----------------------------------------------------------------------------

DOTFILES_DIR="$HOME/.files"

# Support for command not found on Ubuntu machines.
[[ -e /etc/zsh_command_not_found ]] && source /etc/zsh_command_not_found

# Programs to activate
ZSH=$HOME/.files/bin/ohmyzsh
source $ZSH/oh-my-zsh.sh

source ~/.files/bin/z/z.sh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [ -d /usr/share/fzf ]
then
    source /usr/share/fzf/key-bindings.zsh
    source /usr/share/fzf/completion.zsh
fi

# -----------------------------------------------------------------------------
# global variables
# -----------------------------------------------------------------------------

local ret_status="%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )"

export ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[blue]%}git:%{$fg[red]%}"
export ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
export ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%} %{$fg[yellow]%}✗"
export ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%}"

export PROMPT='%{$fg[red]%}%n%{$fg[magenta]%}@%{$fg[yellow]%}%m %{$fg[cyan]%}[%~%\] $(git_prompt_info)
${ret_status}%{$reset_color%}'

export MANPATH="/usr/local/man:$MANPATH"
export LC_ALL="en_US.UTF-8"

# Rust source code path.
if [ -d "$HOME/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src" ]
then
    RUST_SRC_PATH="$HOME/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src"
    export RUST_SRC_PATH
fi

# -----------------------------------------------------------------------------
# PATH
# -----------------------------------------------------------------------------

export PATH="$DOTFILES_DIR/bin:$DOTFILES_DIR/private/bin:$HOME/.cargo/bin:$HOME/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:$PATH"

if [ -e ~/go/bin/ ]
then
    export PATH=$PATH:~/go/bin
fi

if [ -e /opt/homebrew/bin/ ]
then
    export PATH=$PATH:/opt/homebrew/bin
fi

if [ -e ~/bin ]
then
    export PATH=${PATH}:~/bin
fi

if [ -e ~/sync/bin ]
then
    export PATH=${PATH}:~/sync/bin
fi

# -----------------------------------------------------------------------------
# aliases
# -----------------------------------------------------------------------------

NUM_CPUS=`(which nproc > /dev/null 2>&1 && nproc) || sysctl -n hw.logicalcpu`

alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias b='./build.sh && m'

alias c="cb"
alias cb="cargo build"

alias d='docker'
alias dc='docker-compose'

alias fbn='find ./ -name $1'

if which lazygit &>/dev/null
then
    alias lg='lazygit'
fi

alias g='git'
alias gch="git checkout \"\$(git branch --all | fzf | tr -d '[:space:]')\"";
alias gpf="git push --force-with-lease"
alias h='hg'

alias m="make -sj$NUM_CPUS"
alias meteo='curl -4 wttr.in/Lyon'
alias ms='make -s 2>&1 | less'

alias op='xdg-open'

alias paint='pinta'
alias psg='ps aux | grep $1'
alias py='python3'

alias serve='python -m http.server'

alias tmux='TERM=screen-256color-bce tmux' # 256 colors mode by default.

alias upvim='nvim +PlugInstall +UpdateRemotePlugins +qa'

alias sl='ls'

# -----------------------------------------------------------------------------
# mozilla stuff
# -----------------------------------------------------------------------------

export BUILD_VERBOSE_LOG=1

MOZ_SM_SRC_DIR="$HOME/code/mozilla-inbound/js/src"

alias jit='$MOZ_SM_SRC_DIR/jit-test/jit_test.py'
alias jitz='$MOZ_SM_SRC_DIR/jit-test/jit_test.py ./dist/bin/js'
alias mrproper='mv build.sh /tmp/build.sh && (rm -rf ./* .deps) && mv /tmp/build.sh ./ && b'
alias try='cd $MOZ_SM_SRC_DIR && cd ../.. && ./mach try -b do -p all -u jsreftest,jittests -t none'

# -----------------------------------------------------------------------------
# better cli tools
# -----------------------------------------------------------------------------

[ -f /usr/bin/ncdu ] && alias du="ncdu -rr -x --exclude .git --exclude node_modules"
